#
# 你需要在你的站点nginx配置文件上设置$WELINE_ROOT变量
# 例如你的配置文件中的root /www/html/www.demo.com;
# 你需要改成 set $WELINE_ROOT /www/html/www.demo.com; # 主配置中设置框架根目录变量
# 然后include /www/html/www.demo.com/nginx.conf.sample;
#

#worker_processes auto;
#worker_rlimit_nofile 51200;
#events
#{
#	worker_connections 51200;
#	multi_accept on;
#}
#http {
		#include       mime.types;
		##include luawaf.conf;
		#include proxy.conf;
        #default_type  application/octet-stream;

        #server_names_hash_bucket_size 512;
        #client_header_buffer_size 32k;
        #large_client_header_buffers 4 32k;
        #client_max_body_size 50m;

        #sendfile   on;
        #tcp_nopush on;

        #keepalive_timeout 60;

        #tcp_nodelay on;

        #fastcgi_connect_timeout 300;
        #fastcgi_send_timeout 300;
        #fastcgi_read_timeout 300;
        #fastcgi_buffer_size 64k;
        #fastcgi_buffers 4 64k;
        #fastcgi_busy_buffers_size 128k;
        #fastcgi_temp_file_write_size 256k;
		#fastcgi_intercept_errors on;

        #gzip on;
        #gzip_min_length  1k;
        #gzip_buffers     4 16k;
        #gzip_http_version 1.1;
        #gzip_comp_level 2;
        #gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;
        #gzip_vary on;
        #gzip_proxied   expired no-cache no-store private auth;
        #gzip_disable   "MSIE [1-6]\.";

        #limit_conn_zone $binary_remote_addr zone=perip:10m;
		#limit_conn_zone $server_name zone=perserver:10m;

        #server_tokens off;
        #access_log off;
        #server
        #{
            #listen 80;
            #server_name 127.0.0.1;
            #index index.php index.html index.htm default.php default.htm default.html;
            #root E:/WelineFramework;

            ################ 作用代码 开始 ################
            # set $WELINE_ROOT /www/html/ # 主配置中设置框架根目录变量
            root $WELINE_ROOT;

            #错误页配置 START
            error_page 403 /pub/errors/403.html;
            error_page 404 /pub/errors/404.html;
            error_page 502 /pub/errors/502.html;
            #错误页配置 END

            #HTTP 转 HTTPS 配置 START

            #HTTP 转 HTTPS 配置 END

            #LIMIT 限制信息配置 START（此处不允许配置，请转到上层server中配置，include的配置文件中不允许配置）
            #limit_conn_zone $binary_remote_addr zone=perip:10m;
            #limit_conn_zone $server_name zone=perserver:10m;
            #LIMIT 限制信息配置 END（此处不允许配置，请转到上层server中配置，include的配置文件中不允许配置）

            #SSL配置 START
            #SSL配置 END

            #----------服务器其他参数配置 START----------
                #server_names_hash_bucket_size 512;（此处不允许配置，请转到上层server中配置，include的配置文件中不允许配置）
                client_header_buffer_size 32k;
                large_client_header_buffers 4 32k;
                client_max_body_size 50m;

                sendfile   on;
                tcp_nopush on;

                keepalive_timeout 60;

                tcp_nodelay on;

                fastcgi_connect_timeout 300;
                fastcgi_send_timeout 300;
                fastcgi_read_timeout 300;
                fastcgi_buffer_size 64k;
                fastcgi_buffers 4 64k;
                fastcgi_busy_buffers_size 128k;
                fastcgi_temp_file_write_size 256k;
                fastcgi_intercept_errors on;
            #----------服务器其他参数配置 END----------

            #----------开启和关闭gzip模式----------
                gzip on;

                #gizp压缩起点，文件大于1k才进行压缩
                gzip_min_length 1k;

                # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间
                gzip_comp_level 6;

                # 进行压缩的文件类型。
                gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/xml text/javascript application/json image/png image/gif image/jpeg;

                #nginx对于静态文件的处理模块，开启后会寻找以.gz结尾的文件，直接返回，不会占用cpu进行压缩，如果找不到则不进行压缩
                #gzip_static on|off

                # 是否在http header中添加Vary: Accept-Encoding，建议开启
                gzip_vary on;

                # 设置压缩所需要的缓冲区大小，以4k为单位，如果文件为7k则申请2*4k的缓冲区
                gzip_buffers 4 16k;

                # 设置gzip压缩针对的HTTP协议版本
                # gzip_http_version 1.1;
            #----------开启和关闭gzip模式----------

            # 升级文件
            set $setup_file $WELINE_ROOT/setup/install.lock;
            # 根路径访问
            location /
            {
                if (!-f $setup_file){
                    rewrite ^/(.*)$ /setup/index.php?s=$1;
                }
                # 如果请求既不是一个文件，也不是一个目录，则执行一下重写规则
                if (!-e $request_filename) {
                    #地址作为将参数rewrite到index.php上。
                    rewrite ^/(.*)$ /index.php?s=$1 last;
                    #若是子目录则使用下面这句，将subdir改成目录名称即可。
                    #rewrite ^/subdir/(.*)$ /subdir/index.php?s=$1;
                }
            }

            # 静态资源访问
            location ~ ^/static/
            {
                root $WELINE_ROOT/pub;
            }

            location ~ ^/static/.*\.(php|php5|sh|pl|py)$
            {
               deny all;
            }
            location ~ ^/images/.*\.(php|php5|sh|pl|py)$
            {
               deny all;
            }
            location ~ ^/data/(attachment|avatar).*\.(php|php5)$
            {
                deny all;
            }

            #一键申请SSL证书验证目录相关设置
            location ~ \.well-known{
                allow all;
            }

            # 禁止直接访问核心文件目录
            location ~ ^/app/ { return 404; }
            location ~ ^/var/ { return 404; }
            location ~ ^/bin/ { return 404; }
            location ~ ^/generated/ { return 404; }
            location ~ ^/extend/ { return 404; }
            location ~ ^/vendor/ { return 404; }
            # 升级目录访问
            location ~ ^/setup/
            {
                if ( -f $setup_file ) {
                    return 403;
                }
            }
            #反代清理缓存配置
            location ~ /purge(/.*) {
                proxy_cache_purge cache_one $1$is_args$args;
            }
            # 防盗链
            #location ~* \.(gif|jpg|png|bmp)$ {
            #    valid_referers none blocked *.ttlsa.com server_names ~\.google\. ~\.baidu\.;
            #    if ($invalid_referer) {
            #        return 403;
            #        #rewrite ^/ http://www.ttlsa.com/403.jpg;
            #    }
            #}

            #一键申请SSL证书验证目录相关设置
            location ~ \.well-known{
                allow all;
            }

            ################ 作用代码 结束 ################
        #	access_log  /www/wwwlogs/127.0.0.1.log;
        #    error_log  /www/wwwlogs/127.0.0.1.error.log;
        #}
    #include vhost/*.conf;
    ##加载vhost目录下的虚拟主机配置文件
#}